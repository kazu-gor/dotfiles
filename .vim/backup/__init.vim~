" Plug loads
call plug#begin('~/.local/share/nvim/plugged')
  Plug 'Shougo/ddc.vim'
  Plug 'vim-denops/denops.vim'
  Plug 'Shougo/pum.vim'
  Plug 'Shougo/ddc-around'
  Plug 'LumaKernel/ddc-file'
  Plug 'Shougo/ddc-matcher_head'
  Plug 'Shougo/ddc-sorter_rank'
  Plug 'Shougo/ddc-converter_remove_overlap'
  Plug 'Shougo/ddc-nvim-lsp'
  Plug 'Shougo/ddc-nextword'
  Plug 'neovim/nvim-lspconfig'
  
  " Plug 'mattn/vim-lsp-settings'
  " Plug 'prabirshrestha/vim-lsp'
call plug#end()

" ddc settings
" call ddc#custom#patch_global('completionMenu', 'pum.vim')
call ddc#custom#patch_global('sources', [
 \ 'around',
 \ 'nvim-lsp',
 \ 'file',
 \ 'nextword',
 \ ])
call ddc#custom#patch_global('sourceOptions', {
 \ 'around': {'mark': 'Around'},
 \ 'nextword': {'mark': 'nextword'},
 \ 'nvim-lsp': {
 \   'mark': 'lsp', 
 \   'forceCompletionPattern': '\.\w*|:\w*|->\w*', 
 \ },
 \ 'file': {
 \   'mark': 'file',
 \   'isVolatile': v:true, 
 \   'forceCompletionPattern': '\S/\S*'
 \ },
 \ '_': {
 \   'matchers': ['matcher_head'],
 \   'sorters': ['sorter_rank'],
 \   'converters': ['converter_remove_overlap'],
 \ }})
call ddc#enable()
inoremap <Tab> <Cmd>call pum#map#insert_relative(+1)<CR>
inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>

" " lsp settings
" function! s:on_lsp_buffer_enabled() abort
" setlocal omnifunc=lsp#complete
" setlocal signcolumn=yes
" if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
" nmap gd <plug>(lsp-definition)
" nmap <leader>rn <plug>(lsp-rename)
" nmap [g <plug>(lsp-previous-diagnostic)
" nmap ]g <plug>(lsp-next-diagnostic)
" nmap ga <plug>(lsp-code-action)
" nmap K <plug>(lsp-hover)
" nmap [j <Plug>(jumpcursor-jump)
" inoremap <buffer> <expr><c-f> lsp#scroll(+4)
" inoremap <buffer> <expr><c-d> lsp#scroll(-4)

" let g:lsp_format_sync_timeout = 1000
" let g:lsp_diagnostics_float_cursor = 1
" autocmd! BufWritePre .tsx,.ts,.rs,.go call execute('LspDocumentFormatSync')

" endfunction

" augroup lsp_install
" au!
" autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
" augroup END

set shell=/usr/local/bin/zsh " コマンドの際にはzshを使う
set tabstop=2 " タブに変換されるサイズ
set shiftwidth=2 " Indentの幅
set expandtab " タブの入力の際にスペース
set textwidth=0 " ワードラッピング無し
set nosmarttab
set clipboard=unnamedplus " クリップボードへの登録
set number " 行番号を表示
set hlsearch " 検索結果のハイライト
set ignorecase " 検索パターンにおいて大文字と小文字を区別しない
set incsearch " 検索コマンドを打ち込んでる間にも、打ち込んだところまで検査結果を表示する
set encoding=UTF-8
set noautoindent
set softtabstop=2
set autoindent

" 削除キーでyankしない
nnoremap x "_x
nnoremap D "_D
" macのショートカット適用
cnoremap <C-a> <Home>
cnoremap <C-e> <End>
cnoremap <C-f> <Right>
cnoremap <C-b> <Left>

noremap! <C-a> <HOME>
noremap! <C-e> <END>
noremap! <C-d> <Del>

vnoremap x "_x

inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-h> <Left>
inoremap <C-l> <Right>

" jj esc
inoremap <silent> jj <ESC>

" ノーマルモードでは初期は英数時
" let g:im_select_default = 'com.google.inputmethod.Japanese.Roman' 

" insertを離れたときに入力モードを切り替える
" autocmd InsertLeave * :silent !/usr/local/bin/im-select com.apple.inputmethod.Kotoeri.RomajiTyping.Roman 
